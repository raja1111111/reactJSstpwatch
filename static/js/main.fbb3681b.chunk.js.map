{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","handlestart","timer","setInterval","setState","prevState","second","state","minute","hour","handlestop","clearInterval","handlereset","Timer","className","time","this","React","Component","Header","id","Action","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAIMA,G,wDACJ,WAAaC,GAAO,IAAD,8BAEjB,cAAMA,IAURC,YAAc,WAEZ,EAAKC,MAAQC,aAAY,WACvB,EAAKC,UAAS,SAACC,GACb,MAAM,CACJC,OAAQD,EAAUC,OAAQ,MAI3B,EAAKC,MAAMD,OAAQ,IAAI,GACxB,EAAKF,UAAS,SAACC,GACb,MAAM,CACJG,OAASH,EAAUG,OAAQ,EAC3BF,OAAQ,MAIX,EAAKC,MAAMC,OAAQ,KAAK,GACzB,EAAKJ,UAAS,SAACC,GACb,MAAM,CACJI,KAAMJ,EAAUI,KAAM,EACtBD,OAAQ,QAKd,MAtCe,EAiDnBE,WAAa,WACXC,cAAc,EAAKT,QAlDF,EAsDfU,YAAc,WACZ,EAAKR,UAAS,WACZ,MAAO,CACLK,KAAM,EACND,OAAQ,EACRF,OAAQ,OAxDjB,EAAKO,MAAMA,EACV,EAAKN,MAAO,CACVE,KAAM,EACND,OAAO,EACPF,OAAO,GAPQ,E,qDAgEjB,OACE,sBAAKQ,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAOC,KAAMC,KAAKT,QAClB,cAAC,EAAD,CAAQN,YAAce,KAAKf,YAAaS,WAAYM,KAAKN,WAAaE,YAAaI,KAAKJ,qB,GArE9EK,IAAMC,YA4ElBC,EAAS,WACb,OAAO,oBAAIC,GAAG,YAAP,yBAGHP,EAAQ,SAACb,GACf,OACE,qBAAKoB,GAAG,UAAR,SACE,gCAAMpB,EAAMe,KAAKN,KAAjB,IAAwBT,EAAMe,KAAKP,OAAnC,IAA4CR,EAAMe,KAAKT,aAOrDe,EAAS,SAACrB,GACd,OACE,sBAAKc,UAAU,MAAf,UACE,wBAAQQ,QAAStB,EAAMY,YAAYQ,GAAG,QAAtC,mBACA,wBAAQE,QAAStB,EAAMC,YAAYmB,GAAG,YAAtC,mBACA,wBAAQE,QAAStB,EAAMU,WAAWU,GAAG,OAArC,sBAISrB,IC3FAwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fbb3681b.chunk.js","sourcesContent":["\nimport React from 'react'\nimport './App.css';\n\nclass App extends React.Component{\n  constructor (props){\n    \n    super(props);\n   this.Timer=Timer\n    this.state= {\n      hour :0,\n      minute:0,\n      second:0\n\n    }\n  }\n\n  handlestart = () => {\n\n    this.timer = setInterval(()=>{\n      this.setState((prevState) =>{\n        return{\n          second :prevState.second +1\n        };\n      });\n\n      if(this.state.second /60==1){\n        this.setState((prevState)=>{\n          return{\n            minute : prevState.minute +1,\n            second :0\n          }\n        })\n      }\n      if(this.state.minute /60===1){\n        this.setState((prevState)=>{\n          return{\n            hour :prevState.hour +1,\n            minute :0\n          }\n\n        })\n      }\n    },1000);\n    // this.setState((prevState) =>{\n    //   return{\n    //     hour : prevState.hour + 1,\n    //     minute:prevState.minute + 1,\n    //     second:prevState.second + 1\n    //   }\n\n    \n  };\n\n  handlestop = () => {\n    clearInterval(this.timer);\n    \n      }\n\n      handlereset = () => {\n        this.setState(()=>{\n          return {\n            hour :0,\n            minute :0,\n            second :0\n          }\n        })\n          }\n  render(){\n    return(\n      <div className=\"container\">\n        <Header />\n        <Timer time={this.state}/>\n        <Action handlestart ={this.handlestart} handlestop={this.handlestop}  handlereset={this.handlereset}/>\n        </div>\n    );\n  }\n\n}\n\nconst Header = ()=>{\n  return <h1 id=\"stopwatch\">stop watch</h1>\n}\n\nconst Timer = (props)=>{\nreturn (\n  <div id=\"display\">\n    <div>{props.time.hour}:{props.time.minute}:{props.time.second}</div>\n    \n\n  </div>\n)\n}\n\nconst Action = (props) =>{\n  return (\n    <div className=\"btn\">\n      <button onClick={props.handlereset}id=\"reset\">Reset</button>\n      <button onClick={props.handlestart}id=\"startstop\">Start</button>\n      <button onClick={props.handlestop}id=\"stop\">stop</button>\n    </div>\n  );\n}\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}